#!/usr/bin/env python
import xlrd
import csv
import argparse
import sys
import xml
import python_csv.utils
import python_csv.to_csv

def readCL():
    parser = argparse.ArgumentParser()
    parser.add_argument("-s","--xls_sheet", default="0", help="either sheet number or sheet name")
    parser.add_argument("--xls_sheet_names",action="store_true",help="print list of sheet names")
    parser.add_argument("--path", help="comma separated path string for json or xml. Example: 0,2,1")
    parser.add_argument("infile",default=sys.stdin, nargs="?", type=argparse.FileType('r'))
    args = parser.parse_args()
    if not args.path:
        args.path = []
    else:
        args.path = args.path.split(",")
    return args.infile, args.xls_sheet, args.xls_sheet_names, args.path

    
def write_csv(rows):
    wr = csv.writer(sys.stdout, lineterminator="\n")
    for r in rows:
        wr.writerow([s.encode("utf-8") for s in r if s])


if __name__ == "__main__":
    infile, xls_sheet, xls_sheet_names, path = readCL()

    txt = infile.read()
    
    try:
        rows = python_csv.to_csv.read_xls(txt)
        write_csv(rows)
        sys.exit()
    except xlrd.biffh.XLRDError:
        pass

    try:
        rows = python_csv.to_csv.read_json(txt, path)
        write_csv(rows)
        sys.exit()
    except ValueError:
        pass

    try:
        rows = python_csv.to_csv.read_xml(txt, path)
        write_csv(rows)
        sys.exit()
    except xml.parsers.expat.ExpatError:
        pass

    
    raise Exception("ERROR: File doesn't match xls, json or xml format!" + "\n")
